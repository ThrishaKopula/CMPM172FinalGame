[gd_scene load_steps=8 format=2]

[ext_resource path="res://art/adventurer-v1.5-Sheet.png" type="Texture" id=1]
[ext_resource path="res://code/player.gd" type="Script" id=2]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 9.5, 14 )

[sub_resource type="Animation" id=2]
resource_name = "idle"
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 3, 2 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("reflect:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 3, 2 ]
}

[sub_resource type="Animation" id=3]
resource_name = "run"
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 9, 10, 11, 12, 13 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("reflect:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 9, 10, 11, 12, 13 ]
}

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

void fragment(){
	vec2 pixel = UV / TEXTURE_PIXEL_SIZE;
	int x_min = max(int(pixel.x-1.), 0);
	int x_max = min(int(pixel.x+2.), int(1./TEXTURE_PIXEL_SIZE.x));
	int y_min = max(int(pixel.y-1.), 0);
	int y_max = min(int(pixel.y+2.), int(1./TEXTURE_PIXEL_SIZE.y));
	vec4 total = vec4(0., 0., 0., 0.);
	for(int i = x_min; i < x_max; i++){
		for(int j = y_min; j < y_max; j++){
			total += texture(TEXTURE, vec2(float(i), float(j)) * TEXTURE_PIXEL_SIZE);
		}
	}
	total /= 9.;
	COLOR = total;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[node name="KinematicBody2D" type="KinematicBody2D"]
scale = Vector2( 16.166, 16.166 )
script = ExtResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( -95.6328, -32.6611 )
texture = ExtResource( 1 )
offset = Vector2( 95.6328, 29.6611 )
hframes = 8
vframes = 16
frame = 9

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/idle = SubResource( 2 )
anims/run = SubResource( 3 )

[node name="reflect" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0.392157 )
material = SubResource( 5 )
position = Vector2( -84.0035, -33.3416 )
z_index = -1
texture = ExtResource( 1 )
offset = Vector2( 95.6328, 29.6611 )
hframes = 8
vframes = 16
frame = 9
